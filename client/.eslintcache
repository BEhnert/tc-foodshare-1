[{"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\index.js":"1","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\App.js":"2","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\Views\\input.js":"3","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\Views\\home.js":"4","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\LoginButton.js":"5","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\LogoutButton.js":"6","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\Views\\map.js":"7","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Input.js":"8","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Footer.js":"9","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Searchbar.js":"10","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\List-container.js":"11","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Navbar.js":"12","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Header.js":"13","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\List.js":"14","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\PlacesAutoComplete.js":"15","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\utils\\API.js":"16"},{"size":491,"mtime":1608693608525,"results":"17","hashOfConfig":"18"},{"size":979,"mtime":1608693608414,"results":"19","hashOfConfig":"18"},{"size":386,"mtime":1608693608422,"results":"20","hashOfConfig":"18"},{"size":1896,"mtime":1608693608420,"results":"21","hashOfConfig":"18"},{"size":303,"mtime":1608693608442,"results":"22","hashOfConfig":"18"},{"size":333,"mtime":1608693608443,"results":"23","hashOfConfig":"18"},{"size":13076,"mtime":1608693608424,"results":"24","hashOfConfig":"18"},{"size":6165,"mtime":1608693608432,"results":"25","hashOfConfig":"18"},{"size":237,"mtime":1608693608429,"results":"26","hashOfConfig":"18"},{"size":333,"mtime":1608693608452,"results":"27","hashOfConfig":"18"},{"size":212,"mtime":1608693608435,"results":"28","hashOfConfig":"18"},{"size":1499,"mtime":1608693608446,"results":"29","hashOfConfig":"18"},{"size":186,"mtime":1608693608430,"results":"30","hashOfConfig":"18"},{"size":837,"mtime":1608693608439,"results":"31","hashOfConfig":"18"},{"size":2494,"mtime":1608693608447,"results":"32","hashOfConfig":"18"},{"size":242,"mtime":1608693608552,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"kbj7r9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\index.js",[],["74","75"],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\App.js",["76","77"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Views/home\";\r\nimport Map from \"./Views/map\";\r\nimport LoginButton from './components/LoginButton';\r\nimport LogoutButton from './components/LogoutButton';\r\nimport Input from \"./Views/input\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <div className=\"container\"></div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n              \r\n            </Route>\r\n            <Route path=\"/map\">\r\n              {/* Route path to Search Page */}\r\n              <Map />\r\n            </Route>\r\n            <Route path=\"/input\">\r\n              {/* Route path to Input Page */} \r\n              <Input/>\r\n              </Route>\r\n            <Route path=\"/\">{/* Route path to Login Page */}</Route>\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\Views\\input.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\Views\\home.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\LoginButton.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\LogoutButton.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\Views\\map.js",["78","79","80","81","82"],"import React from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport {\r\n  InfoWindow,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  Circle,\r\n} from \"react-google-maps\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport Geocode from \"react-geocode\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport Footer from \"../components/Footer\";\r\n// import Autocomplete from \"react-google-autocomplete\";\r\nimport List from \"../components/List\";\r\nimport ListContainer from \"../components/List-container\";\r\nimport Input from \"../components/Input\";\r\nimport \"./map.css\";\r\nimport AutoCompletePlaces from \"../components/PlacesAutoComplete\";\r\nimport API from \"../utils/API\";\r\n// import Header from \"../../../Portfolio-React/src/components/Header\";\r\n\r\nGeocode.setApiKey(\"AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo\");\r\n\r\nclass Map extends React.Component {\r\n  state = {\r\n    locations: [],\r\n    address: \"\",\r\n    city: \"\",\r\n    area: \"\",\r\n    state: \"\",\r\n    zoom: 50,\r\n    height: 400,\r\n    LatLngId: [\r\n      // LatLng = {\r\n      //   lat: \"\",\r\n      //   lng: \"\"\r\n      // },\r\n      // id =\"\"\r\n    ],\r\n    mapPosition: {\r\n      lat: 44.986656,\r\n      lng: -93.258133,\r\n    },\r\n    markerPosition: {\r\n      lat: 44.986656,\r\n      lng: -93.258133,\r\n    },\r\n    filter: false,\r\n    filteredLocation: [],\r\n    InfoWindowShow: false,\r\n    selectedLocation: null\r\n    // this.state.locations ? this.state.locations.filter(location => location.address.toLocaleLowerCase().includes(this.state.address.toLocaleLowerCase())) : []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadLocations();\r\n  }\r\n\r\n  storeLatLngId = () => {\r\n    this.state.locations.map((location) => {\r\n      const LatLngList = { lat: \"\", lng: \"\" };\r\n      return (\r\n        (LatLngList.lat = location.lat),\r\n        (LatLngList.lng = location.lng),\r\n        this.state.LatLngId.push(LatLngList, location.id)\r\n      );\r\n    });\r\n  };\r\n\r\n  loadLocations = () => {\r\n    API.getLocation()\r\n      .then((res) => {\r\n        this.setState({ locations: res.data });\r\n        // this.storeLatLng();\r\n        console.log(\"Location list\", this.state.locations);\r\n        console.log(\"LatLng List\", this.state.LatLng);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // onMarkerDragEnd = (event) => {\r\n  //   let newLat = event.latLng.lat();\r\n  //   let newLng = event.latLng.lng();\r\n  //   console.log(event);\r\n\r\n  // };\r\n\r\n  handleChange = (address) => {\r\n    this.setState({ address: address });\r\n    this.setState({ filter: address ? true : false });\r\n    this.setState({\r\n      filteredLocation: this.state.locations.filter((location) =>\r\n        location.address\r\n          .toLocaleLowerCase()\r\n          .includes(this.state.address.toLocaleLowerCase())\r\n      ),\r\n    });\r\n  };\r\n\r\n  handleSelect = (address) => {\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => {\r\n        this.setState({ mapPosition: latLng, markerPosition: latLng });\r\n        console.log(\r\n          \"Success\",\r\n          latLng,\r\n          \"mapPosition -\",\r\n          this.state.mapPosition,\r\n          \"markerPosition -\",\r\n          this.state.markerPosition\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  render() {\r\n    // this.loadLocations();\r\n    const MapWithAMarker = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          defaultZoom={12}\r\n          defaultCenter={{\r\n            lat: this.state.markerPosition.lat,\r\n            lng: this.state.markerPosition.lng,\r\n          }}\r\n        >\r\n          {/* <Marker\r\n            draggable={false}\r\n            onDragEnd={this.onMarkerDragEnd}\r\n            position={{\r\n              lat: this.state.markerPosition.lat,\r\n              lng: this.state.markerPosition.lng,\r\n            }}\r\n          >\r\n            {/* <InfoWindow>\r\n              <div>{this.state.address}</div>\r\n            </InfoWindow> */}\r\n          {/* </Marker> */}\r\n\r\n          <div>\r\n            {this.state.locations.map((location, idx) => {\r\n              if (this.state.selectedLocation != null && location.id != this.state.selectedLocation) return null;\r\n              // console.log(parseInt(location.lat), idx);\r\n              return this.state.InfoWindowShow ? (\r\n                <Marker\r\n                  id={location.id}\r\n                  key={idx}\r\n                  position={{\r\n                    lat: parseFloat(location.lat),\r\n                    lng: parseFloat(location.lng),\r\n                  }}\r\n                  title={location.address}\r\n                >\r\n                  <InfoWindow id={location.id}>\r\n                    <div>{location.address}</div>\r\n                  </InfoWindow>\r\n                </Marker>\r\n              ) : (\r\n                <Marker\r\n                  id={location.id}\r\n                  key={idx}\r\n                  position={{\r\n                    lat: parseFloat(location.lat),\r\n                    lng: parseFloat(location.lng),\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* <Marker\r\n          \r\n                position={{\r\n                  lat: 45.0861,\r\n                  lng: -93.2633,\r\n                }}\r\n              />; */}\r\n          {/* {Geocode.fromAddress(\"Coon Rapids\").then(\r\n            (response) => {\r\n              const { lat, lng } = response.results[0].geometry.location;\r\n              \r\n              console.log(lat, lng);\r\n            },\r\n            (error) => {\r\n              console.error(error);\r\n            }\r\n          )} */}\r\n        </GoogleMap>\r\n      ))\r\n    );\r\n\r\n    return (\r\n      this.loadLocations,\r\n      (\r\n        <div className=\"mapContainer\">\r\n          <Navbar />\r\n\r\n          {/* <Autocomplete\r\n\r\n          // style={{\r\n           \r\n          //   // backgroundImage= none !important;\r\n            \r\n          //   // justifySelf: \"center\",\r\n          //   // textAlign: \"center\",\r\n          //   // marginLeft: \"300px\",\r\n          //   // marginBottom: \"10px\",\r\n\r\n          // }}\r\n          types={[\"(cities)\"]}\r\n          \r\n          // onPlaceSelected={this.onPlaceSelected}\r\n        /> */}\r\n\r\n          {/* <AddressBar/> */}\r\n          <div className=\"container\">\r\n            {/* <Searchbar/> */}\r\n\r\n            <div style={{ textAlign: \"left\" }}>\r\n              <h3>\r\n                <b>Food Sharing Locations</b>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row lg-12\">\r\n              <div className=\"col-xs-6 col-md-6\">\r\n                <ListContainer>\r\n                  {!this.state.filter ? (\r\n                    this.state.locations.map((location, idx) => {\r\n                      return (\r\n                        <List\r\n                          id={location.id}\r\n                          key={idx}\r\n                          onClick={() => {\r\n                            console.log(\"List onclick\");\r\n                          }}\r\n                          address={location.address}\r\n                          food={location.FoodItems[0].category}\r\n                          description={location.FoodItems[0].item_description}\r\n                        >\r\n                          <button\r\n                            id={location.id}\r\n                            className=\"btn btn-secondary btn-sm\"\r\n                            onClick={() => {\r\n                              !this.state.InfoWindowShow\r\n                                ? this.setState({ InfoWindowShow: true })\r\n                                : this.setState({ InfoWindowShow: false });\r\n\r\n                                this.setState({ selectedLocation: location.id })\r\n                              console.log(\r\n                                \"current location\",\r\n                                this.state.markerPosition,\r\n                                this.state.mapPosition\r\n                              );\r\n                            }}\r\n                          >\r\n                            Show Location\r\n                          </button>\r\n                        </List>\r\n                      );\r\n                    })\r\n                  ) : this.state.filteredLocation.length === 0 ? (\r\n                    <h4>Sorry no Locations found in this area</h4>\r\n                  ) : (\r\n                    this.state.filteredLocation.map((filteredLocation, idx) => {\r\n                      console.log(\r\n                        \"filtered filteredLocation\",\r\n                        filteredLocation\r\n                      );\r\n                      return (\r\n                        <List\r\n                          key={idx}\r\n                          onClick={() => {\r\n                            console.log(\"List onclick\");\r\n                          }}\r\n                          address={filteredLocation.address}\r\n                          food={filteredLocation.FoodItems[0].category}\r\n                          description={\r\n                            filteredLocation.FoodItems[0].item_description\r\n                          }\r\n                        >\r\n                          {\r\n                            <button\r\n                              className=\"btn btn-secondary btn-sm\"\r\n                              onClick={() => {\r\n                                !this.state.InfoWindowShow\r\n                                  ? this.setState({ InfoWindowShow: true })\r\n                                  : this.setState({ InfoWindowShow: false });\r\n                                this.setState({ filter: true, selectedLocation: filteredLocation.id });\r\n                                console.log(\r\n                                  \"current location\",\r\n                                  this.state.markerPosition,\r\n                                  this.state.mapPosition\r\n                                );\r\n                              }}\r\n                            >\r\n                              Show Location\r\n                            </button>\r\n                          }\r\n                        </List>\r\n                      );\r\n                    })\r\n                  )}\r\n                </ListContainer>\r\n              </div>\r\n              <div className=\"col-xs-12 col-md-6\">\r\n                {/* <AutoCompletePlaces/> */}\r\n                <PlacesAutocomplete\r\n                  searchOptions={\"cities\"}\r\n                  // types={['city']}\r\n                  value={this.state.address}\r\n                  onChange={this.handleChange}\r\n                  onSelect={this.handleSelect}\r\n                  style={{ justifyItems: \"center\" }}\r\n                >\r\n                  {({\r\n                    getInputProps,\r\n                    suggestions,\r\n                    getSuggestionItemProps,\r\n                    loading,\r\n                  }) => (\r\n                    <div>\r\n                      <input\r\n                        {...getInputProps({\r\n                          placeholder: \"Search Cities ...\",\r\n                          className: \"location-search-input\",\r\n                        })}\r\n                      />\r\n                      <div className=\"autocomplete-dropdown-container\">\r\n                        {loading && <div>Loading...</div>}\r\n                        {suggestions.map((suggestion) => {\r\n                          const className = suggestion.active\r\n                            ? \"suggestion-item--active\"\r\n                            : \"suggestion-item\";\r\n                          // inline style for demonstration purpose\r\n                          const style = suggestion.active\r\n                            ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                            : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                          return (\r\n                            <div\r\n                              {...getSuggestionItemProps(suggestion, {\r\n                                className,\r\n                                style,\r\n                              })}\r\n                            >\r\n                              <span>{suggestion.description}</span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </PlacesAutocomplete>\r\n                <MapWithAMarker\r\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo&v=3.exp&libraries=geometry,drawing,places\"\r\n                  loadingElement={<div style={{ height: `100%` }} />}\r\n                  containerElement={\r\n                    <div style={{ height: `600px`, width: `100%` }} />\r\n                  }\r\n                  mapElement={<div style={{ height: `100%`, width: \"100%\" }} />}\r\n                ></MapWithAMarker>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Input.js",["83","84"],"import React, { useState } from \"react\";\r\nimport \"./Input.css\";\r\nimport API from \"../utils/API\";\r\nimport Geocode from \"react-geocode\";\r\nimport {\r\n   Marker,\r\n} from \"react-google-maps\";\r\nfunction InputCard() {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [lat, setLat] = useState(\"\");\r\n  const [lng, setLng] = useState(\"\");\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setAddress(`Test Set`);\r\n    API.saveLocation({\r\n      address: address,\r\n      category: category,\r\n      item_description: description,\r\n      lat:lat,\r\n      lng:lng\r\n    });\r\n    //Brock modified to log in handler\r\n    setAddress(\"\");\r\n    console.log(\"This is address after reset\" + address);\r\n    //Brock added to get checkboxes cleared, can turn into React but wanted it working for now\r\n    document.getElementById(\"customCheck1\").checked=false;\r\n    document.getElementById(\"customCheck2\").checked=false;\r\n    document.getElementById(\"customCheck3\").checked=false;\r\n    document.getElementById(\"customCheck4\").checked=false;\r\n    document.getElementById(\"customCheck5\").checked=false;\r\n    setCategory(\"\");\r\n    console.log(\"This is category after reset\" + category);\r\n    setDescription(\"\");\r\n    console.log(\"This is description after reset\" + description);\r\n    //End of Brock modified to log in handler\r\n  };\r\n  //Brock added for logging\r\n  console.log(\"This is address outside of submitHandler\" + address);\r\n  console.log(\"This is category outside of submitHandler\" + category);\r\n  console.log(\"This is description outside of submitHandler\" + description);\r\n//End of Brock add for logging\r\n  return (\r\n    <container className=\"card inputCard\">\r\n      <span className=\"title\">\r\n        <h5>Please add details below</h5>\r\n      </span>\r\n      <form onSubmit={submitHandler}>\r\n        {/* Submit Address */}\r\n        <div className=\"row address\">\r\n          <div className=\"col\">\r\n            <input\r\n              name=\"address\"\r\n              placeholder=\"Enter Donating  Address\"\r\n              type=\"text\"\r\n              //Brock added value setting below\r\n              value={address}\r\n              className=\"form-control\"\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              onChange={\r\n                Geocode.fromAddress(address).then(\r\n                  (response) => {\r\n                    const { lat, lng } = response.results[0].geometry.location;\r\n                    setLat(lat);\r\n                    setLng(lng)\r\n                    console.log(lat, lng, \"Input Address\", address);\r\n                  },\r\n                  (error) => {\r\n                    console.error(error);\r\n                  }\r\n                ),\r\n                (event) => setAddress(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <button type=\"button\" className=\"btn btn-success btn-md\">\r\n              Use My Location\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* Food Category */}\r\n        <b>Please Choose Food Category:</b>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input\r\n            name=\"category\"\r\n            value=\"Canned Foods\"\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck1\"\r\n            onChange={(event) => setCategory(event.target.value)}\r\n          />\r\n          <label className=\"custom-control-label\" for=\"customCheck1\">\r\n            Canned Foods\r\n          </label>\r\n        </div>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input\r\n            name=\"category\"\r\n            value=\"Breads/Grains\"\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck2\"\r\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\r\n          />\r\n          <label className=\"custom-control-label\" for=\"customCheck2\">\r\n            Breads/Grains\r\n          </label>\r\n        </div>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input\r\n            name=\"category\"\r\n            value=\"Vegetables/Fruits\"\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck3\"\r\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\r\n          />\r\n          <label className=\"custom-control-label\" for=\"customCheck3\">\r\n            Vegetables/Fruits\r\n          </label>\r\n        </div>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input\r\n            name=\"category\"\r\n            value=\"Drink\"\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck4\"\r\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\r\n          />\r\n          <label className=\"custom-control-label\" for=\"customCheck4\">\r\n            Drinks\r\n          </label>\r\n        </div>\r\n        <div className=\"custom-control custom-checkbox\">\r\n          <input\r\n            name=\"category\"\r\n            value=\"Other\"\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck5\"\r\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\r\n          />\r\n          <label className=\"custom-control-label\" for=\"customCheck5\">\r\n            Other\r\n          </label>\r\n        </div>\r\n        {/* Description */}\r\n        <textarea\r\n          name=\"description\"\r\n          className=\"textarea\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          placeholder=\"Description / Comment\"\r\n          //Brock added value setting below\r\n          value={description}\r\n          onChange={(event) => setDescription(event.target.value)}\r\n        ></textarea>{\" \"}\r\n        <br />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-md\"\r\n          onClick={submitHandler}\r\n        >\r\n          Submit{\" \"}\r\n        </button>\r\n      </form>\r\n    </container>\r\n  );\r\n}\r\nexport default InputCard;","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Footer.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Searchbar.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\List-container.js",["85"],"import React from 'react';\r\nimport \"./List-container.css\"\r\n\r\nexport default function(props) {\r\n\r\nreturn(\r\n    <div className=\"listContainer\" >\r\n      {\r\n      props.children    \r\n      }  \r\n    </div>    \r\n)\r\n\r\n}","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Navbar.js",["86"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport LoginButton from \"./LoginButton\";\r\nimport { isAuthenticated, useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nfunction Navbar() {\r\n  const AuthenticationButton = () => {\r\n    const { isAuthenticated } = useAuth0();\r\n\r\n    return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          TC - Food Share\r\n        </Link>\r\n        <ul className=\"navbar-nav\">{AuthenticationButton()}</ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n\r\n// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import LoginButton from './LoginButton';\r\n// import LogoutButton from './LogoutButton';\r\n\r\n// function Navbar() {\r\n//     return(\r\n//         <div>\r\n//             <nav className=\"navbar navbar-light bg-light\">\r\n//             <Link className=\"navbar-brand\" to=\"/React-Portfolio/home\">TC - Food Share</Link>\r\n//                 <ul className=\"navbar-nav\">\r\n\r\n//                          <LoginButton />\r\n//                             <LogoutButton />\r\n\r\n//                  <Link className=\"nav-item active\" to=\"\">Search</Link>\r\n//                  <Link className=\"nav-item active\" to=\"\">Login/Signup</Link>\r\n//              </ul>\r\n//              </nav>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Navbar;\r\n","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\Header.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\List.js",["87"],"import React from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport default function List(props) {\r\n  return (\r\n    <div className=\"listGroup\">\r\n     \r\n      Address: {props.address} <br />\r\n      Foods: {props.food}\r\n      <br />\r\n      Description: {props.description}\r\n      <br />\r\n      <div>\r\n        {/* <TwitterIcon size={32} round={true} />\r\n        <TwitterShareButton/> */}\r\n        <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n          Share          \r\n        </button>\r\n        <a\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm\"\r\n          target=\"_blank\"\r\n          href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(props.address)}`}\r\n        >\r\n         Direction\r\n        </a>\r\n        {props.children}\r\n      </div>\r\n      <hr color=\"red\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\components\\PlacesAutoComplete.js",[],"C:\\Users\\Zakfe\\BOOTCAMP\\PROJECT-3-DEPLOY\\tc-foodshare-1\\client\\src\\utils\\API.js",["88"],"import axios from \"axios\"\r\n\r\nexport default {\r\n    saveLocation: function(locationInfo) {\r\n        return axios.post(\"/api/input\", locationInfo);\r\n      },\r\n\r\n      getLocation: function(){\r\n        return axios.get(\"api/input\")\r\n      }\r\n\r\n}",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"99","line":17,"column":8,"nodeType":"95","messageId":"96","endLine":17,"endColumn":17},{"ruleId":"93","severity":1,"message":"100","line":22,"column":8,"nodeType":"95","messageId":"96","endLine":22,"endColumn":13},{"ruleId":"93","severity":1,"message":"101","line":24,"column":8,"nodeType":"95","messageId":"96","endLine":24,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":149,"column":70,"nodeType":"104","messageId":"105","endLine":149,"endColumn":72},{"ruleId":"93","severity":1,"message":"106","line":6,"column":4,"nodeType":"95","messageId":"96","endLine":6,"endColumn":10},{"ruleId":"107","severity":1,"message":"108","line":73,"column":18,"nodeType":"109","messageId":"110","endLine":73,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":4,"column":1,"nodeType":"113","endLine":14,"endColumn":2},{"ruleId":"93","severity":1,"message":"114","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":22,"column":11,"nodeType":"117","endLine":22,"endColumn":26},{"ruleId":"111","severity":1,"message":"118","line":3,"column":1,"nodeType":"113","endLine":12,"endColumn":2},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'LoginButton' is defined but never used.","Identifier","unusedVar","'LogoutButton' is defined but never used.","'Circle' is defined but never used.","'Searchbar' is defined but never used.","'Input' is defined but never used.","'AutoCompletePlaces' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Marker' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isAuthenticated' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]